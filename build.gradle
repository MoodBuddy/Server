plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'moodBuddy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // SpringWeb
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JWT 추가
    implementation 'com.auth0:java-jwt:3.18.1' //
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2' // jjwt API
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2' // jjwt 구현체
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2' // jjwt의 Jackson 지원

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // modelmapper
    implementation 'org.modelmapper:modelmapper:2.4.4'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.3.1'

    // coolsms
    implementation 'net.nurigo:sdk:4.3.0'
    implementation 'net.nurigo:javaSDK:2.2'

    // slack
    implementation 'com.github.maricn:logback-slack-appender:1.4.0'

    // Elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    //    implementation 'org.springframework.data:spring-data-elasticsearch:4.2.2'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // devtools
    developmentOnly("org.springframework.boot:spring-boot-devtools")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

jar {
    enabled = false
}